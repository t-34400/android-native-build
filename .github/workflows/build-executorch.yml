name: build-executorch-debug

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:

jobs:
  android-arm64:
    runs-on: ubuntu-latest
    env:
      BUILD_DIR: executorch/cmake-android-out
    steps:
      - uses: actions/checkout@v4

      - uses: nttld/setup-ndk@v1
        id: ndk
        with:
          ndk-version: r26d

      - name: Set ANDROID_NDK
        run: echo "ANDROID_NDK=${{ steps.ndk.outputs.ndk-path }}" >> $GITHUB_ENV

      - name: Show runner env
        run: |
          uname -a
          cmake --version || true
          echo "ANDROID_NDK=$ANDROID_NDK"
          ls -al "$ANDROID_NDK/toolchains/llvm/prebuilt" || true
          ls -al "$ANDROID_NDK/toolchains/llvm/prebuilt/linux-x86_64/bin" | head -n 50 || true

      - name: Install tools
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq

      - name: Clean build dir
        run: |
          rm -rf "$BUILD_DIR"
          mkdir -p "$BUILD_DIR"

      - name: Configure (Android arm64)
        working-directory: executorch
        run: |
          cmake -S . -B cmake-android-out \
            -DCMAKE_TOOLCHAIN_FILE="${ANDROID_NDK}/build/cmake/android.toolchain.cmake" \
            -DANDROID_ABI=arm64-v8a \
            -DANDROID_PLATFORM=26 \
            -DCMAKE_TRY_COMPILE_TARGET_TYPE=STATIC_LIBRARY \
            -DCMAKE_C_COMPILER_TARGET=aarch64-linux-android26 \
            -DCMAKE_CXX_COMPILER_TARGET=aarch64-linux-android26 \
            -DCMAKE_FIND_ROOT_PATH_MODE_PACKAGE=ONLY \
            -DCMAKE_FIND_ROOT_PATH_MODE_LIBRARY=ONLY \
            -DCMAKE_FIND_ROOT_PATH_MODE_INCLUDE=ONLY \
            -DCMAKE_MESSAGE_LOG_LEVEL=VERBOSE -DCMAKE_RULE_MESSAGES=ON -DCMAKE_VERBOSE_MAKEFILE=ON

      - name: Build (verbose)
        working-directory: executorch
        run: cmake --build cmake-android-out -v --parallel

      - name: Verify AArch64
        working-directory: executorch
        run: |
          set -euo pipefail
          TOOLBIN="${ANDROID_NDK}/toolchains/llvm/prebuilt/linux-x86_64/bin"
          READOBJ="${TOOLBIN}/llvm-readobj"
          find cmake-android-out -type f \( -name "lib*.a" -o -name "lib*.so" \) -print0 |
            xargs -0 -I{} bash -c '"$0" --file-headers "{}" | sed -n "1p;/Machine:/p"; echo --- "{}"' "$READOBJ" |
            tee verify-machine.txt
          awk '/^Machine: / && $2!="AArch64"{bad=1} END{exit bad}' verify-machine.txt

      - name: Grep bad objects compile flags
        if: ${{ failure() }}
        working-directory: executorch
        run: |
          jq -r '.[].file + "\t" + .command' cmake-android-out/compile_commands.json |
            grep -v -- '--target=aarch64-linux-android' || true

      - name: Dump CMake cache and logs
        if: ${{ always() }}
        working-directory: executorch
        run: |
          grep -E '^(CMAKE_SYSTEM_NAME|ANDROID_ABI|ANDROID_PLATFORM|CMAKE_TRY_COMPILE_TARGET_TYPE|CMAKE_C.._COMPILER_TARGET):' \
            cmake-android-out/CMakeCache.txt || true
          find cmake-android-out -maxdepth 3 -type f \( -name 'CMakeOutput.log' -o -name 'CMakeError.log' \) -print -exec tail -n +1 {} \; || true

      - name: Upload debug artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: android-aarch64-debug
          path: |
            executorch/cmake-android-out/CMakeCache.txt
            executorch/cmake-android-out/compile_commands.json
            executorch/verify-machine.txt
            **/CMakeFiles/CMakeOutput.log
            **/CMakeFiles/CMakeError.log
