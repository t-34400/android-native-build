name: build-executorch-android
on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build-arm64:
    runs-on: ubuntu-22.04
    env:
      ANDROID_ABI: arm64-v8a
      ANDROID_API: 26
      BUILD_TYPE: Release
      EXECUTORCH_VER: v0.7.0

    steps:
      - uses: actions/checkout@v4

      - name: Install prerequisites
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build git pkg-config python3 python3-pip rsync
          python3 -m pip install --upgrade pip zstd
          python3 -m pip install torch --index-url https://download.pytorch.org/whl/cpu

      - name: Setup CMake 3.29+
        uses: lukka/get-cmake@v3.30.3

      - name: Setup Android NDK r27b
        id: ndk
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r27b

      - name: Clone ExecuTorch ${{ env.EXECUTORCH_VER }} with submodules
        run: |
          git clone --branch "${EXECUTORCH_VER}" --depth 1 https://github.com/pytorch/executorch.git
          cd executorch
          git submodule update --init --recursive

      - name: Configure (core + extensions)
        working-directory: executorch
        env:
          ANDROID_NDK: ${{ steps.ndk.outputs.ndk-path }}
        run: |
          cmake -S . -B build-android \
            -G Ninja \
            -DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK}/build/cmake/android.toolchain.cmake \
            -DANDROID_ABI=${ANDROID_ABI} \
            -DANDROID_PLATFORM=android-${ANDROID_API} \
            -DCMAKE_BUILD_TYPE=${BUILD_TYPE} \
            -DBUILD_TESTING=OFF \
            -DEXECUTORCH_ENABLE_LOGGING=ON \
            -DEXECUTORCH_LOG_LEVEL=Info \
            -DEXECUTORCH_BUILD_XNNPACK=ON \
            -DEXECUTORCH_BUILD_EXTENSION_FLAT_TENSOR=ON \
            -DEXECUTORCH_BUILD_EXTENSION_MODULE=ON \
            -DEXECUTORCH_BUILD_EXTENSION_DATA_LOADER=ON \
            -DEXECUTORCH_BUILD_EXTENSION_TENSOR=ON \
            -DEXECUTORCH_BUILD_EXTENSION_RUNNER_UTIL=ON \
            -DEXECUTORCH_BUILD_KERNELS_OPTIMIZED=ON \
            -DEXECUTORCH_BUILD_KERNELS_QUANTIZED=OFF \
            -DCMAKE_INSTALL_PREFIX=$PWD/jni \
            -DCMAKE_INSTALL_INCLUDEDIR=include \
            -DCMAKE_INSTALL_LIBDIR=libs/${ANDROID_ABI}
            
      - name: Build & Install ExecuTorch
        run: |
          cmake --build build --config $BUILD_TYPE
          cmake --install build --prefix "${PWD}/executorch/install"
      
      - name: Link shared runtime (.so) from static libs
        working-directory: executorch
        env:
          ANDROID_NDK: ${{ steps.ndk.outputs.ndk-path }}
        run: |
          set -euo pipefail
          ABI=${ANDROID_ABI}
          API=${ANDROID_API}
          TOOL=${ANDROID_NDK}/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android${API}-clang++

          mkdir -p libs/${ABI}

          mapfile -t LIBS < <(
            find build-android \
              -type f -name '*.a' \
              -not -path '*/third-party/flatcc_external_project/*' \
              -print | sort
          )
          if [ ${#LIBS[@]} -eq 0 ]; then
            echo "ERROR: No static libraries found." ; exit 2
          fi

          ${TOOL} -shared -fPIC \
            -Wl,--start-group "${LIBS[@]}" -Wl,--end-group \
            -o libs/${ABI}/libexecutorch_runtime.so \
            -llog -landroid -latomic -lc++_shared

      - name: Upload ExecuTorch runtime
        uses: actions/upload-artifact@v4
        with:
          name: executorch-core-${{ env.ANDROID_ABI }}
          path: |
            executorch/install/include
            executorch/libs/${{ env.ANDROID_ABI }}/libexecutorch_runtime.so
