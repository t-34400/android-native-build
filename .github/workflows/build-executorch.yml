name: build-executorch-android
on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build-arm64:
    runs-on: ubuntu-22.04
    env:
      ANDROID_ABI: arm64-v8a
      ANDROID_API: 26
      BUILD_TYPE: Release
      EXECUTORCH_VER: v0.7.0

    steps:
      - uses: actions/checkout@v4

      - name: Setup CMake
        uses: lukka/get-cmake@v3.30.3

      - name: Setup Android NDK r27b
        id: ndk
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r27b

      - name: Clone ExecuTorch ${{ env.EXECUTORCH_VER }}
        run: |
          git clone --branch "${EXECUTORCH_VER}" --depth 1 https://github.com/pytorch/executorch.git
          cd executorch
          git submodule update --init --recursive

      - name: Install Python deps
        working-directory: executorch
        run: python3 -m pip install -r requirements-dev.txt

      - name: Prepare
        working-directory: executorch
        run: bash ./install_executorch.sh --clean

      - name: Python deps for codegen/buck2
        working-directory: executorch
        run: python3 -m pip install -r requirements-dev.txt
      
      - name: Install PyTorch (CPU wheel)
        run: python3 -m pip install --index-url https://download.pytorch.org/whl/test/cpu torch
      
      - name: Prepare PYTHONPATH and sitecustomize
        working-directory: executorch
        run: |
          : > sitecustomize.py
          echo "PYTHONPATH=$PWD" >> $GITHUB_ENV
            
      - name: Check codegen imports
        working-directory: executorch
        run: |
          python3 - <<'PY'
          import os, sys
          print("PYTHONPATH =", os.environ.get("PYTHONPATH"))
          import executorch
          import executorch.codegen
          import torchgen
          print("imports OK")
          PY
          
      - name: Configure (Android + XNNPACK)
        working-directory: executorch
        env:
          ANDROID_NDK: ${{ steps.ndk.outputs.ndk-path }}
        run: |
          rm -rf cmake-android-out
          cmake -S . -B cmake-android-out \
            -DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK}/build/cmake/android.toolchain.cmake \
            -DANDROID_ABI=${ANDROID_ABI} \
            -DANDROID_PLATFORM=android-${ANDROID_API} \
            -DCMAKE_BUILD_TYPE=${BUILD_TYPE} \
            -DEXECUTORCH_BUILD_XNNPACK=ON \
            -DEXECUTORCH_BUILD_EXTENSION_DATA_LOADER=ON \
            -DEXECUTORCH_BUILD_EXTENSION_MODULE=ON \
            -DEXECUTORCH_BUILD_EXTENSION_FLAT_TENSOR=ON \
            -DEXECUTORCH_BUILD_EXTENSION_TENSOR=ON

      - name: Build
        working-directory: executorch
        run: cmake --build cmake-android-out -j

      - name: Stage outputs (include & libs)
        working-directory: executorch
        env:
          ABI: ${{ env.ANDROID_ABI }}
        run: |
          mkdir -p jni/include executorch/libs/${ABI}
          rsync -a --prune-empty-dirs --include '*/' --include '*.h' --include '*.hpp' --exclude '*' executorch/ jni/include/executorch/
          find cmake-android-out -type f -name 'lib*.a' -print0 | xargs -0 -I{} cp -f {} libs/${ABI}/

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: executorch-android-${{ env.ANDROID_ABI }}
          path: |
            executorch/jni/include
            executorch/libs/${{ env.ANDROID_ABI }}
