name: build-executorch-android
on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build-arm64:
    runs-on: ubuntu-22.04
    env:
      ANDROID_ABI: arm64-v8a
      ANDROID_API: 26
      BUILD_TYPE: Release
      EXECUTORCH_VER: v0.7.0

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python deps
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install wheel setuptools ninja
          python3 -m pip install torch --index-url https://download.pytorch.org/whl/cpu

      - name: Setup CMake
        uses: lukka/get-cmake@v3.30.3

      - name: Setup Android NDK r27b
        id: ndk
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r27b

      - name: Clone ExecuTorch ${{ env.EXECUTORCH_VER }} with submodules
        run: |
          git clone --branch "${EXECUTORCH_VER}" --depth 1 https://github.com/pytorch/executorch.git
          cd executorch
          git submodule update --init --recursive

      - name: Configure (Android)
        working-directory: executorch
        run: |
          cmake -S . -B cmake-out-android \
            -G Ninja \
            -DCMAKE_BUILD_TYPE=${BUILD_TYPE} \
            -DANDROID=ON \
            -DANDROID_ABI=${ANDROID_ABI} \
            -DANDROID_PLATFORM=android-${ANDROID_API} \
            -DCMAKE_TOOLCHAIN_FILE=${{ steps.ndk.outputs.ndk-path }}/build/cmake/android.toolchain.cmake \
            -DEXECUTORCH_ENABLE_LOGGING=ON \
            -DEXECUTORCH_LOG_LEVEL=Info \
            -DEXECUTORCH_BUILD_XNNPACK=ON \
            -DEXECUTORCH_BUILD_EXTENSION_FLAT_TENSOR=ON \
            -DEXECUTORCH_BUILD_EXTENSION_MODULE=ON \
            -DEXECUTORCH_BUILD_EXTENSION_DATA_LOADER=ON \
            -DEXECUTORCH_BUILD_EXTENSION_TENSOR=ON \
            -DEXECUTORCH_BUILD_EXTENSION_RUNNER_UTIL=ON \
            -DEXECUTORCH_BUILD_KERNELS_OPTIMIZED=ON \
            -DEXECUTORCH_BUILD_KERNELS_QUANTIZED=OFF

      - name: Build (Android)
        working-directory: executorch
        run: |
          cmake --build cmake-out-android --target executorch_runtime -j

      # ---- Only this step is changed (header staging fix) ----
      - name: Stage headers and libs (fixed)
        working-directory: executorch
        run: |
          mkdir -p jni/include/executorch
          mkdir -p libs/${ANDROID_ABI}

          # 1) Copy ALL headers from the source tree first (prevents header drop)
          rsync -a --prune-empty-dirs \
            --include '*/' --include '*.h' --exclude '*' \
            executorch/ jni/include/executorch/

          # 2) Overlay any generated/installed headers from the build tree
          if [ -d cmake-out-android/include/executorch ]; then
            rsync -a cmake-out-android/include/executorch/ jni/include/executorch/
          fi

          # 3) Collect shared libraries from common build locations
          cp cmake-out-android/*.so libs/${ANDROID_ABI}/ 2>/dev/null || true
          if [ -d cmake-out-android/lib ]; then
            cp cmake-out-android/lib/*.so libs/${ANDROID_ABI}/ 2>/dev/null || true
          fi

          # 4) Sanity checks (fail early if required headers are missing)
          test -f jni/include/executorch/runtime/executor/program.h || {
            echo "ERROR: required header missing: jni/include/executorch/runtime/executor/program.h"; exit 3;
          }
          test -f jni/include/executorch/extension/module/module.h || {
            echo "ERROR: required header missing: jni/include/executorch/extension/module/module.h"; exit 3;
          }

          # (Optional) quick listings for debugging
          ls -al jni/include/executorch/runtime/executor || true
          ls -al jni/include/executorch/extension || true
          ls -al libs/${ANDROID_ABI} || true

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: executorch-core-${{ env.ANDROID_ABI }}
          path: |
            executorch/jni/include/**
            executorch/libs/${{ env.ANDROID_ABI }}/libexecutorch_runtime.so
